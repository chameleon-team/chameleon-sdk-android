<template>
  <c-popup show="{{show}}" c-bind:close="cancelclick" position="bottom">
    <view class="action-wrap">
      <view class="action-header">
        <text class="action-header-text" style="{{actionHeaderStyle}}">{{title}}</text>
        <view class="cancel-wrap" c-if="{{pickerStyle}}" c-bind:tap="cancelclick">
          <text class="cancel-text" style="{{actionCancelStyle}}">{{cancelTxt}}</text>
        </view>
      </view>
      <view class="action-content" style="{{actionContentStyle}}">
        <list
          class="action-list"
          height="{{listHeight}}"
        >
          <cell
            c-for="{{list}}"
            c-for-index="i"
            c-for-item="item"
            data-idx="{{i}}"
            data-value="{{item}}"
            c-bind:tap="itemClick"
            class="action-list-item"
          >
            <text c-if="{{i === active}}" style="{{activeTextStyle}}"  class="text-active">{{item}}</text>
            <text c-else style="{{textStyle}}"  class="text">{{item}}</text>
          </cell>     
        </list>
      </view>
      <block c-if="{{!pickerStyle}}">
        <view class="action-space"></view>
        <text style="{{actionCancelStyle}}" c-bind:tap="cancelclick" class="cancel-btn">{{cancelTxt}}</text>
      </block>
    </view>
  </c-popup>
</template>
<script>
class CActionsheet   {
  props = {
    show: {
      type: Boolean,
      default: false
    },
    title: {
      type: String,
      default: "标题"
    },
    cancelTxt: {
      type: String,
      default: "取消"
    },
    headerStyle: {
      type: String,
      default: ""
    },
    cancelStyle: {
      type: String,
      default: ""
    },
    contentStyle: {
      type: String,
      default: ""
    },
    activeStyle: {
      type: String,
      default: ""
    },
    list: {
      type: Array,
      default: []
    },
    pickerStyle: {
      type: Boolean,
      default: false
    }, 
    active: {
      type: Number,
      default: -1
    }
  }

  data = {
  }

  computed = {
    actionHeaderStyle() {
      return this.headerStyle;
    },
    actionCancelStyle() {
      return this.cancelStyle;
    },
    actionContentStyle() {
      return `height:${this.list.length * 100}cpx`;
    },
    textStyle() {
      return this.contentStyle;
    },
    activeTextStyle() {
      return this.activeStyle;
    },
    listHeight() {
      return this.list.length * 100;
    }
  }

  watch  = {
  }

  methods = {
    cancelclick() {
      this.$cmlEmit("cancel");
    },
    itemClick(e) {
      this.$cmlEmit("select", {
        index: e.currentTarget.dataset.idx,
        value: e.currentTarget.dataset.value
      });
    },
    actiontap() {}
  }

  beforeCreate() {
  }

  created() {
  }

  beforeMount() {
  }

  mounted() {
  }

  beforeDestroy() {
  }

  destroyed() {
  }
}

export default new CActionsheet();
</script>
<style scoped>
.action-wrap {
  background: #ffffff;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}
.action-header {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  height: 120cpx;
}
.action-header-text {
  height: 120cpx;
  line-height: 120cpx;
  font-size: 36cpx;
  color: #333;
  text-align: center;
  border-bottom: 1px solid #f0f0f0;
}
.action-content {
  position: relative;
}
.action-list-item:active {
  background-color: rgba(0,0,0,.04);
}
.text {
  display: block;
  font-size: 32cpx;
  color: #666;
  height: 100cpx;
  line-height: 100cpx;
  text-align: center;
  border-top: 1px solid #f0f0f0;
  box-sizing: border-box;
}
.text-active {
  display: block;
  font-size: 32cpx;
  height: 100cpx;
  line-height: 100cpx;
  text-align: center;
  border-top: 1px solid #f0f0f0;
  color: #ff6900;
  box-sizing: border-box;
}
.action-space {
  background-color: #9d9d9d;
  height: 2cpx;
}
.cancel-btn {
  height: 100cpx;
  line-height: 100cpx;
  text-align: center;
  font-size: 32cpx;
  color: #666;
}
.cancel-wrap {
  position: absolute;
  left: 0;
  top: 0;
  width: 120cpx;
  height: 120cpx;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.cancel-text {
  color: #999;
  font-size: 28cpx;
}
</style>
<script cml-type="json">
{
    "base": {
        "usingComponents": {
          "c-popup": "../c-popup/c-popup"
        },
        "component": true
    }
}
</script>

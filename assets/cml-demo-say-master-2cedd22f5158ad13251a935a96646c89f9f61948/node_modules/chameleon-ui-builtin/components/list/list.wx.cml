<template>
  <origin-scroll-view
    class="scroll-container"
    scroll-y
    lower-threshold="{{bottomOffset}}"
    scroll-with-animation="true"
    enable-back-to-top="true"
    bindscrolltolower="onBottom"
    bindscroll="onScroll"
    style="{{ wrapperStyle }}"
    ref="c-list"
  >
    <slot>

    </slot>
  </origin-scroll-view>
</template>
<script>
  import cml from 'chameleon-api'
  class List implements ListInterface {
    props = {
      cstyle: {
        type: String,
        default: ''
      },
      bottomOffset: {
        // 距底部/右边多远时（单位px），触发 scrolltolower 事件
        type: Number,
        default: 0
      },
      toElement: {
        type: String,
        default: ''
      },
      bounce: {
        type: Boolean,
        default: true
      },
      height: {
        type: Number,
        default: 0
      }
    }
    data = {
      cmtstyle: ''
    }
    computed ={
      wrapperStyle () {
        if (this.height >= 0) {
          return `${this.cstyle};height:${this.height}cpx;`
        }
        return this.cmtstyle + this.cstyle;
      }
    }
    methods = {
      onScroll(e) {
        let detail = e.detail;
        detail.deltaX = detail.deltaX || 0;
        detail.deltaY = detail.deltaY || 0;
        this.$cmlEmit('onscroll', detail);
        this.$cmlEmit('customscroll', detail)
      },
      onBottom(e) {
        this.$cmlEmit('scrolltobottom', e.detail)
      }
    }
    mounted() {
      setTimeout(async() => {
        if (!this.height) {
          console.error('list组件必须传递高度属性')
          return
        }
        if (this.height === -1) {
          let rectData = await cml.getRect(this.$refs['c-list'], this)
          let windowRect = await cml.getSystemInfo()
          let height = windowRect.viewportHeight - rectData.top;
          this.cmtstyle = `height:${height}cpx;`
        }
      }, 200)
    }
  }

  export default new List();

</script>

<style scoped>

</style>

<script cml-type="json">
{
  "wx": {
    "component": true
  }
}
</script>
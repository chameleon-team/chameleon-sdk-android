<script cml-type="interface">
type Func = (res: CMLObject) => Void
interface QueryInterface {
  getQueryObjSync(): CMLObject;
}
</script>

<script cml-type="web">
import {
  queryParse
} from '../../utils';

class Method implements QueryInterface {
  getQueryObjSync() {
    return queryParse(location.href);
  }
}

export default new Method();
</script>

<script cml-type="weex">
import { callNative } from '../../core/index.js'
import {
  queryParse
} from '../../utils';

// 启动就获得url
var launchUrl = '';
callNative('cml', 'getLaunchUrl', {}, function (res) {
  launchUrl = res.data;
})

class Method implements QueryInterface {
  getQueryObjSync() {
    let queryObj = {};
  
    // 如果没有launchUrl字段则为非cml端sdk环境
    if (launchUrl && ~launchUrl.indexOf('?')) {
      let search = launchUrl.split('?')[1] || '';
      queryObj = queryParse(search);
    } else {
      let bundleUrl = weex.config.bundleUrl;
      let search = bundleUrl.split('?')[1] || '';
      queryObj = queryParse(search);
    }

    Object.keys(queryObj).forEach((key) => {
      queryObj[key] = decodeURIComponent(queryObj[key]);
    });

    return queryObj;
  }
}
export default new Method();
</script>

<script cml-type="wx">
class Method implements QueryInterface {
  getQueryObjSync() {
  }
}
export default new Method();
</script>

<script cml-type="interface">
type obj = {
  errno: Number,
  errMsg: String,
  data: String
}
type removeCallback = (value: obj) => void

interface UtilsInterface {
  removeStorage(key: String, cb: removeCallback): void;
}

</script>

<script cml-type="web">
  class Method implements UtilsInterface {
    removeStorage(key, cb) {
      try {
        localStorage.removeItem(key);
        cb({
          errno: 0,
          errMsg: 'success',
          data: ''
        });
      } catch (e) {
        let errMsg;
        if (typeof e !== 'string') {
          errMsg = JSON.stringify(e);
        } else {
          errMsg = e;
        }
        cb({
          errno: -1,
          errMsg,
          data: ''
        });
      }
    }
  }
  export default new Method();
</script>

<script cml-type="weex">
import cmlBridge from '../../lib/sdk/cmlBridge';

class Method implements UtilsInterface {
  removeStorage(key, cb) {
    cmlBridge.removeStorage({key}, res=>{
      const { errno, msg = '' } = res;
      cb({
        errno,
        errMsg: msg,
        data: ''
      });
    });
  }
}
export default new Method();
</script>

<script cml-type="wx">
  class Method implements UtilsInterface {
    removeStorage(key, cb) {
      try {
        wx.removeStorageSync(key);
        cb({
          errno: 0,
          errMsg: 'success',
          data: ''
        });
      } catch (e) {
        let errMsg;
        if (typeof e !== 'string') {
          errMsg = JSON.stringify(e);
        } else {
          errMsg = e;
        }
        cb({
          errno: -1,
          errMsg,
          data: ''
        });
      }
    }
  }
  export default new Method();
</script>
